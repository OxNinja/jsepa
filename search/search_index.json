{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home JavaScript Enhancement Proposals Agreement, JSEPA This projects aims to centralize the globally well-used coding conventions, and thus make this knowledge accessible to anyone. Tip This project was mainly inspired by the famous Python Enhancement Proposals, PEP . Introduction The first use of the JSEPA is to provide well-defined, clear and functionnal coding style for the JavaScript scripting language. With time and patience, good practices and specifically JavaScript-aimed proposals will emerge by the community. Index JSEPA-1 : JSEPA guidelines and definition JSEPA-2 : JavaScript coding style and guidelines Sources The JSEPA project is based on the actual online guidelines and tips about JavaScript, such as: https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Code_guidelines/JavaScript https://github.com/airbnb/javascript","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#javascript-enhancement-proposals-agreement-jsepa","text":"This projects aims to centralize the globally well-used coding conventions, and thus make this knowledge accessible to anyone. Tip This project was mainly inspired by the famous Python Enhancement Proposals, PEP .","title":"JavaScript Enhancement Proposals Agreement, JSEPA"},{"location":"#introduction","text":"The first use of the JSEPA is to provide well-defined, clear and functionnal coding style for the JavaScript scripting language. With time and patience, good practices and specifically JavaScript-aimed proposals will emerge by the community.","title":"Introduction"},{"location":"#index","text":"JSEPA-1 : JSEPA guidelines and definition JSEPA-2 : JavaScript coding style and guidelines","title":"Index"},{"location":"#sources","text":"The JSEPA project is based on the actual online guidelines and tips about JavaScript, such as: https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Code_guidelines/JavaScript https://github.com/airbnb/javascript","title":"Sources"},{"location":"contribute/","text":"Contributing Contributing to this project is highly appreciated. One can do so by creating an issue or a pull request on the Github repository. Contributors Author: 0xNinja Contributors:","title":"Contributing"},{"location":"contribute/#contributing","text":"Contributing to this project is highly appreciated. One can do so by creating an issue or a pull request on the Github repository.","title":"Contributing"},{"location":"contribute/#contributors","text":"Author: 0xNinja Contributors:","title":"Contributors"},{"location":"jsepas/","text":"List of all JSEPAs The validated JSEPAs are listed here.","title":"List of all JSEPAs"},{"location":"jsepas/#list-of-all-jsepas","text":"The validated JSEPAs are listed here.","title":"List of all JSEPAs"},{"location":"jsepas/jsepa-1/","text":"JSEPAS-1: JSEPA guidelines and definition What is JSEPA Pronounced /d\u0292e\u026a\u025bsipa/ for JS-EPA, or /\u0292s\u025bp\u00e6/ , as \"j'sais pas\" in French. Types of JSEPA Standards track : describes a new feature or implementation Informationnal : describes a JavaScript issue, or provides general guidelines or information to the JavaScript community. JSEPA workflow Submitting a JSEPA","title":"JSEPAS-1: JSEPA guidelines and definition"},{"location":"jsepas/jsepa-1/#jsepas-1-jsepa-guidelines-and-definition","text":"","title":"JSEPAS-1: JSEPA guidelines and definition"},{"location":"jsepas/jsepa-1/#what-is-jsepa","text":"Pronounced /d\u0292e\u026a\u025bsipa/ for JS-EPA, or /\u0292s\u025bp\u00e6/ , as \"j'sais pas\" in French.","title":"What is JSEPA"},{"location":"jsepas/jsepa-1/#types-of-jsepa","text":"Standards track : describes a new feature or implementation Informationnal : describes a JavaScript issue, or provides general guidelines or information to the JavaScript community.","title":"Types of JSEPA"},{"location":"jsepas/jsepa-1/#jsepa-workflow","text":"","title":"JSEPA workflow"},{"location":"jsepas/jsepa-1/#submitting-a-jsepa","text":"","title":"Submitting a JSEPA"},{"location":"jsepas/jsepa-2/","text":"JSEPA-2: JavaScript coding style and guidelines Introduction This JSEPA aims to provide some general and simple guidelines for anyone. Some more specific recommandations are also yielded here. General guidelines Expanded syntax Comments A one-line comment in JavaScript is represented by a double slash // followed by a single space and the content of the comment. For a better understanding and reading, a one-line commment must be on one separated line of the code it is commenting: A multi-line comment is represented by a block containing the content of the comment and surrounded by /* (comment opener) and */ (comment closer). For better reading, a multi-line comment must have its comment lines starting with an asterisk ( * ), which must also be aligned with the above (previous) one. The multi-line comment must and with the closing tag ( */ ) in a separated line of the last line of comment, and its asterisk must be aligned with the previous one as well. \u2705 // \u274c // \u2705 /* \u274c /* // This variabe does x... const myVar = 42 ; // My comment console . log ( \"Hello\" ); // And an other one document . location . href = \"https://github.com\" ; const myVar = 42 ; // This variabe does x... console . log ( \"Hello\" ); // My comment document . location . href = \"https://github.com\" ; // And an other one /* This variable does: * x, * y, * z... */ const myVar = 42 ; /* This variable does: x, * y, z... */ const myVar = 42 ; Variables","title":"JSEPA-2: JavaScript coding style and guidelines"},{"location":"jsepas/jsepa-2/#jsepa-2-javascript-coding-style-and-guidelines","text":"","title":"JSEPA-2: JavaScript coding style and guidelines"},{"location":"jsepas/jsepa-2/#introduction","text":"This JSEPA aims to provide some general and simple guidelines for anyone. Some more specific recommandations are also yielded here.","title":"Introduction"},{"location":"jsepas/jsepa-2/#general-guidelines","text":"","title":"General guidelines"},{"location":"jsepas/jsepa-2/#expanded-syntax","text":"","title":"Expanded syntax"},{"location":"jsepas/jsepa-2/#comments","text":"A one-line comment in JavaScript is represented by a double slash // followed by a single space and the content of the comment. For a better understanding and reading, a one-line commment must be on one separated line of the code it is commenting: A multi-line comment is represented by a block containing the content of the comment and surrounded by /* (comment opener) and */ (comment closer). For better reading, a multi-line comment must have its comment lines starting with an asterisk ( * ), which must also be aligned with the above (previous) one. The multi-line comment must and with the closing tag ( */ ) in a separated line of the last line of comment, and its asterisk must be aligned with the previous one as well. \u2705 // \u274c // \u2705 /* \u274c /* // This variabe does x... const myVar = 42 ; // My comment console . log ( \"Hello\" ); // And an other one document . location . href = \"https://github.com\" ; const myVar = 42 ; // This variabe does x... console . log ( \"Hello\" ); // My comment document . location . href = \"https://github.com\" ; // And an other one /* This variable does: * x, * y, * z... */ const myVar = 42 ; /* This variable does: x, * y, z... */ const myVar = 42 ;","title":"Comments"},{"location":"jsepas/jsepa-2/#variables","text":"","title":"Variables"}]}